import unittest
from meu_grafo import *
from bibgrafo.grafo_exceptions import *

class TestGrafo(unittest.TestCase):
    def setUp(self):

        #Grafo não dir apenas com peso 1
        self.g_dijkstra = MeuGrafo(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R'
                               , 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'α', 'β', 'φ', 'Ω', 'π', 'Δ', 'θ'])

        self.g_dijkstra.adicionaAresta('a1', 'A', 'B')
        self.g_dijkstra.adicionaAresta('a2', 'A', 'C')
        self.g_dijkstra.adicionaAresta('a3', 'A', 'D')
        self.g_dijkstra.adicionaAresta('a4', 'D', 'C')
        self.g_dijkstra.adicionaAresta('a5', 'B', 'E')
        self.g_dijkstra.adicionaAresta('a6', 'B', 'I')
        self.g_dijkstra.adicionaAresta('a7', 'B', 'F')
        self.g_dijkstra.adicionaAresta('a8', 'C', 'G')
        self.g_dijkstra.adicionaAresta('a9', 'D', 'H')
        self.g_dijkstra.adicionaAresta('a10', 'H', 'G')
        self.g_dijkstra.adicionaAresta('a11', 'G', 'F')
        self.g_dijkstra.adicionaAresta('a12', 'F', 'E')
        self.g_dijkstra.adicionaAresta('a13', 'F', 'J')
        self.g_dijkstra.adicionaAresta('a14', 'G', 'J')
        self.g_dijkstra.adicionaAresta('a15', 'J', 'I')
        self.g_dijkstra.adicionaAresta('a16', 'G', 'K')
        self.g_dijkstra.adicionaAresta('a17', 'H', 'L')
        self.g_dijkstra.adicionaAresta('a18', 'I', 'M')
        self.g_dijkstra.adicionaAresta('a19', 'J', 'N')
        self.g_dijkstra.adicionaAresta('a20', 'K', 'O')
        self.g_dijkstra.adicionaAresta('a21', 'L', 'P')
        self.g_dijkstra.adicionaAresta('a22', 'M', 'Q')
        self.g_dijkstra.adicionaAresta('a23', 'M', 'S')
        self.g_dijkstra.adicionaAresta('a24', 'N', 'S')
        self.g_dijkstra.adicionaAresta('a25', 'N', 'T')
        self.g_dijkstra.adicionaAresta('a26', 'O', 'S')
        self.g_dijkstra.adicionaAresta('a27', 'P', 'T')
        self.g_dijkstra.adicionaAresta('a28', 'N', 'R')
        self.g_dijkstra.adicionaAresta('a29', 'Q', 'R')
        self.g_dijkstra.adicionaAresta('a30', 'S', 'R')
        self.g_dijkstra.adicionaAresta('a31', 'Q', 'U')
        self.g_dijkstra.adicionaAresta('a32', 'R', 'W')
        self.g_dijkstra.adicionaAresta('a33', 'S', 'X')
        self.g_dijkstra.adicionaAresta('a34', 'S', 'Y')
        self.g_dijkstra.adicionaAresta('a35', 'U', 'V')
        self.g_dijkstra.adicionaAresta('a36', 'V', 'W')
        self.g_dijkstra.adicionaAresta('a37', 'W', 'X')
        self.g_dijkstra.adicionaAresta('a38', 'X', 'β')
        self.g_dijkstra.adicionaAresta('a39', 'Y', 'β')
        self.g_dijkstra.adicionaAresta('a40', 'Y', 'φ')
        self.g_dijkstra.adicionaAresta('a41', 'U', 'Z')
        self.g_dijkstra.adicionaAresta('a42', 'Z', 'Ω')
        self.g_dijkstra.adicionaAresta('a43', 'Ω', 'π')
        self.g_dijkstra.adicionaAresta('a44', 'W', 'α')
        self.g_dijkstra.adicionaAresta('a45', 'β', 'π')
        self.g_dijkstra.adicionaAresta('a46', 'π', 'θ')
        self.g_dijkstra.adicionaAresta('a47', 'π', 'Δ')

        # Grafo não dir com diferentes pesos
        self.g_dijkstra2 = MeuGrafo(
            ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R'
                , 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'α', 'β', 'φ', 'Ω', 'π', 'Δ', 'θ'])

        self.g_dijkstra2.adicionaAresta('a1', 'A', 'B', 1)
        self.g_dijkstra2.adicionaAresta('a2', 'A', 'C', 2)
        self.g_dijkstra2.adicionaAresta('a3', 'A', 'D', 3)
        self.g_dijkstra2.adicionaAresta('a4', 'D', 'C', 1)
        self.g_dijkstra2.adicionaAresta('a5', 'B', 'E', 2)
        self.g_dijkstra2.adicionaAresta('a6', 'B', 'I', 3)
        self.g_dijkstra2.adicionaAresta('a7', 'B', 'F', 1)
        self.g_dijkstra2.adicionaAresta('a8', 'C', 'G', 2)
        self.g_dijkstra2.adicionaAresta('a9', 'D', 'H', 3)
        self.g_dijkstra2.adicionaAresta('a10', 'H', 'G', 1)
        self.g_dijkstra2.adicionaAresta('a11', 'G', 'F', 2)
        self.g_dijkstra2.adicionaAresta('a12', 'F', 'E', 3)
        self.g_dijkstra2.adicionaAresta('a13', 'F', 'J', 1)
        self.g_dijkstra2.adicionaAresta('a14', 'G', 'J', 2)
        self.g_dijkstra2.adicionaAresta('a15', 'J', 'I', 3)
        self.g_dijkstra2.adicionaAresta('a16', 'G', 'K', 1)
        self.g_dijkstra2.adicionaAresta('a17', 'H', 'L', 2)
        self.g_dijkstra2.adicionaAresta('a18', 'I', 'M', 3)
        self.g_dijkstra2.adicionaAresta('a19', 'J', 'N', 1)
        self.g_dijkstra2.adicionaAresta('a20', 'K', 'O', 2)
        self.g_dijkstra2.adicionaAresta('a21', 'L', 'P', 3)
        self.g_dijkstra2.adicionaAresta('a22', 'M', 'Q', 1)
        self.g_dijkstra2.adicionaAresta('a23', 'M', 'S', 2)
        self.g_dijkstra2.adicionaAresta('a24', 'N', 'S', 3)
        self.g_dijkstra2.adicionaAresta('a25', 'N', 'T', 1)
        self.g_dijkstra2.adicionaAresta('a26', 'O', 'S', 2)
        self.g_dijkstra2.adicionaAresta('a27', 'P', 'T', 3)
        self.g_dijkstra2.adicionaAresta('a28', 'N', 'R', 1)
        self.g_dijkstra2.adicionaAresta('a29', 'Q', 'R', 2)
        self.g_dijkstra2.adicionaAresta('a30', 'S', 'R', 3)
        self.g_dijkstra2.adicionaAresta('a31', 'Q', 'U', 1)
        self.g_dijkstra2.adicionaAresta('a32', 'R', 'W', 2)
        self.g_dijkstra2.adicionaAresta('a33', 'S', 'X', 3)
        self.g_dijkstra2.adicionaAresta('a34', 'S', 'Y', 1)
        self.g_dijkstra2.adicionaAresta('a35', 'U', 'V', 2)
        self.g_dijkstra2.adicionaAresta('a36', 'V', 'W', 3)
        self.g_dijkstra2.adicionaAresta('a37', 'W', 'X', 1)
        self.g_dijkstra2.adicionaAresta('a38', 'X', 'β', 2)
        self.g_dijkstra2.adicionaAresta('a39', 'Y', 'β', 3)
        self.g_dijkstra2.adicionaAresta('a40', 'Y', 'φ', 1)
        self.g_dijkstra2.adicionaAresta('a41', 'U', 'Z', 2)
        self.g_dijkstra2.adicionaAresta('a42', 'Z', 'Ω', 3)
        self.g_dijkstra2.adicionaAresta('a43', 'Ω', 'π', 1)
        self.g_dijkstra2.adicionaAresta('a44', 'W', 'α', 2)
        self.g_dijkstra2.adicionaAresta('a45', 'β', 'π', 3)
        self.g_dijkstra2.adicionaAresta('a46', 'π', 'θ', 1)
        self.g_dijkstra2.adicionaAresta('a47', 'π', 'Δ', 2)

        #Outro grafo não dir com pesos diferentes
        self.grafo_peso = MeuGrafo(['A', 'B', 'C', 'D', 'E', 'F'])

        self.grafo_peso.adicionaAresta('a1', 'A', 'B', 1)
        self.grafo_peso.adicionaAresta('a2', 'A', 'E', 3)
        self.grafo_peso.adicionaAresta('a3', 'B', 'D', 1)
        self.grafo_peso.adicionaAresta('a4', 'B', 'C', 2)
        self.grafo_peso.adicionaAresta('a5', 'C', 'D', 1)
        self.grafo_peso.adicionaAresta('a6', 'E', 'C', 1)
        self.grafo_peso.adicionaAresta('a7', 'E', 'F', 3)
        self.grafo_peso.adicionaAresta('a8', 'B', 'E', 1)
        self.grafo_peso.adicionaAresta('a9', 'C', 'F', 2)

    def teste_dijkstra_sem_peso(self):
        self.assertEqual(self.g_dijkstra.algoritmo_dijkstra('A', 'θ'), ['A', 'B', 'I', 'M', 'S', 'X', 'β', 'π', 'θ'])
        self.assertEqual(self.g_dijkstra.algoritmo_dijkstra('A', 'Z'), ['A', 'B', 'I', 'M', 'Q', 'U', 'Z'])
        self.assertEqual(self.g_dijkstra.algoritmo_dijkstra('α', 'θ'), ['α', 'W', 'X', 'β', 'π', 'θ'])

    def teste_dijkstra_com_pesos(self):
        self.assertEqual(self.g_dijkstra2.algoritmo_dijkstra('A', 'θ'), ['A', 'B', 'F', 'J', 'N', 'R', 'W', 'X', 'β', 'π', 'θ'])
        self.assertEqual(self.g_dijkstra2.algoritmo_dijkstra('A', 'Z'), ['A', 'B', 'F', 'J', 'N', 'R', 'Q', 'U', 'Z'])
        self.assertEqual(self.g_dijkstra2.algoritmo_dijkstra('α', 'θ'), ['α', 'W', 'X', 'β', 'π', 'θ'])

        self.assertEqual(self.grafo_peso.algoritmo_dijkstra('A', 'F'), ['A', 'B', 'E', 'F'])
        self.assertEqual(self.grafo_peso.algoritmo_dijkstra('F', 'D'), ['F', 'C', 'D'])
        self.assertEqual(self.grafo_peso.algoritmo_dijkstra('A', 'Z'), False)